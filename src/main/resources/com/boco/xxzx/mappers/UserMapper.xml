<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.boco.xxzx.dao.UserDao">
    <resultMap type="user" id="userMap">
    <id  property="id" column="id"/>
    <result property="employeeId" column="employeeId" />
    <result property="employeeName" column="employeeName"/>
     <result property="depNum" column="depNum"/>
    <result property="password" column="password"/>
    <result property="mobile" column="mobile"/>
    <result property="email" column="email"/>
    <result property="status" column="status"/>
    <result property="createTime" column="createTime"/>
    <association property="department" javaType="com.boco.xxzx.model.Department">
    <id property="depId" column="depId"/>
    <result property="depName" column="depName"/>
    </association>
    <collection property="roleList" ofType="com.boco.xxzx.model.Dictionary">
    <id property="id" column="id"/>
    <result property="value" column="value"/>
    </collection>
    </resultMap>
    <resultMap type="UserAndRole" id="userRoleMap">
    <result property="employeeId" column="employeeId"/>
    <result property="roleId" column="roleId"/>
    <association property="user" javaType="com.boco.xxzx.model.User">
    <result property="employeeName" column="employeeName"/>
    </association>
     <association property="role" javaType="com.boco.xxzx.model.Dictionary">
    <result property="value" column="value"/>
    </association>
    </resultMap>
	<select id="login"  resultType="User">
		select e.* from bo_org_user e
	</select>	
    <select id="getUserByUserId"  parameterType="int"   resultType="User">
		select e.* from bo_org_user e  where e.id=#{id}
	</select>	
	<select id="listUserNotInShip"  parameterType="String"   resultMap="userMap" >
	select t.*, t.rowid 
	from bo_org_user t where t.id
	not in   
	(select t1.user_id 
	from bo_act_id_membership t1 
	where t1.group_id=#{groupId} )
	and t.status='1'
	</select>	
	
	<select id="listUserInShip" parameterType="String"   resultMap="userMap" >
	select t.*, t.rowid 
	from bo_org_user t where t.id
	 in (select t1.user_id
	from bo_act_id_membership t1 
	where t1.group_id=#{groupId} )
	and t.status='1'
	</select>
	<insert id="addUser" parameterType="User" keyProperty="id">
	    insert into bo_org_user values(user_seq.nextval,#{employeeId},#{employeeName},#{depNum},#{password},#{mobile,jdbcType=VARCHAR},#{email,jdbcType=VARCHAR},#{creater,jdbcType=VARCHAR},#{createTime,jdbcType=DATE},#{modifier,jdbcType=VARCHAR},#{modifyTime,jdbcType=DATE},1)
	</insert>
	<delete id="delUser" parameterType="int">
	    delete * from bo_org_user t where t.id=#{id}
	</delete>
	<update id="modifyUser" parameterType="User">
	    update bo_org_user t set t.employeeName=#{employeeName},t.depNum=#{depNum},
	    t.mobile=#{mobile},t.modifier=#{modifier,jdbcType=VARCHAR},t.modifyTime=#{modifyTime,jdbcType=VARCHAR} where t.id=#{id}
	</update>
	<update id="modifyPersonal" parameterType="User">
	    update bo_org_user t set t.employeeName=#{employeeName},
	    t.mobile=#{mobile},t.modifier=#{modifier,jdbcType=VARCHAR},t.modifyTime=#{modifyTime,jdbcType=VARCHAR} where t.id=#{id}
	</update>
	<update id="modifyUserPwd" parameterType="User">
	    update bo_org_user t set t.password=#{password},t.modifier=#{modifier},t.modifyTime=#{modifyTime} where t.id=#{id}
	</update>
	<update id="changeStatus" parameterType="User">
	    update bo_org_user t set t.status=#{status},t.modifier=#{modifier},t.modifyTime=#{modifyTime} where t.id=#{id}
	</update>
	<select id="selectUserById" parameterType="Integer" resultMap="userMap">
	   select t.*,t2.depname from bo_org_user t,bo_org_department t2
	    where t.depnum=t2.depnum and t.id=#{id} 
	    </select>
	<select id="selectUser" parameterType="User" resultMap="userMap">
	   select t.*,t2.depname from bo_org_user t,bo_org_department t2
	    where t.depnum=t2.depnum 
	    <if test="employeeId!= null and employeeId != ''">
	    and t.employeeId=#{employeeId}
	    </if>
	    <if test="employeeName!= null and employeeName != ''">
	    and t.employeeName like concat(concat('%', #{employeeName}), '%')
	    </if>
	    <if test="id!= null and id != ''">
	    and t.id=#{id}
	    </if>
	    <if test="status!= null">
	    and t.status=#{status}
	    </if>
	</select>
	<select id="selectCriteriaUser" parameterType="String" resultMap="userMap">
	   select t.*,t2.depname from bo_org_user t,bo_org_department t2
	    where t.depnum=t2.depnum and t.status=1	
	    and t.employeeId like concat(concat('%', #{condi}), '%') or t.employeeName like concat(concat('%', #{condi}), '%') or 
	    t.email like concat(concat('%', #{condi}), '%')	   
	</select>
	<select id="selectUserWithRole" parameterType="User" resultMap="userMap">
	select t.*,t2.depname,t4.* from bo_org_user t,bo_org_department t2,bo_data_dict t3,bo_org_userrole t4
      where t.depnum=t2.depnum and t.employeeid=t4.employeeid and t3.id=t4.roleid and t.status=1
	<if test="employeeId!= null and employeeId != ''">
	    and t.employeeId=#{employeeId}
	    </if>
	</select>
	<insert id="authorizeUser" parameterType="UserAndRole">
	insert into bo_org_userrole values(#{employeeId},#{roleId},#{creater,jdbcType=VARCHAR},#{createTime,jdbcType=DATE},#{modifier,jdbcType=VARCHAR},#{modifyTime,jdbcType=DATE})
	</insert>
	<select id="selectAuthorize" parameterType="String" resultMap="userRoleMap">
	select t2.employeeName,t3.value,t1.* 
	from bo_org_userrole t1,bo_org_user t2,bo_data_dict t3 
	where t1.roleId=t3.id and t1.employeeId=t2.employeeId and t1.employeeId=#{employeeId} 
	</select>
	<delete id="delUserAndRole" parameterType="String">
	    delete  from bo_org_userrole t where t.employeeId=#{employeeId}
	</delete>
</mapper> 